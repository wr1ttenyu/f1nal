package wr1ttenyu.f1nal.study.designpattern.pattern23.proxy;

/**
 * 代理模式基本介绍：
 *      1. 代理模式为一个对象提供一个替身，以控制对这个对象的访问。即通过代理对象访问目标，这样做的好处是：
 *          可以在目标对象实现的基础上，增强额外的功能操作，即扩展目标对象的功能。
 *      2. 被代理的对象可以是远程对象、创建开销大的对象或需要安全控制的对象
 *      3. 代理模式有不同的形式，主要有三种：静态代理、动态代理（需要代理对象实现接口）和
 *          Cglib代理（不需要代理对象有实现的接口，也属于动态代理的范畴）
 *
 *
 * 代理模式与装饰者模式的区别(我的理解)：
 *      装饰者模式：可以扩展被装饰者原有的功能，也可以增加新的功能
 *      代理模式：是对被代理对象已有功能的增强，不改变对象原有功能
 */
public class Summary {
}
