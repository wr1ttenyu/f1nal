@startuml

class Order

interface IOrderCreate {
    +createOrder(Order order):Order
}
interface IOrderCancle {
    +cancle(Order order):Order
}
interface IOrderPayPrepare {
    +payPrepare (Order order):Order
}
interface IOrderPaySuccess {
    +paySuccess(Order order):Order
}
interface IOrderDefray {
    +orderDefray(Order order):Order
}
interface IOrderPayFail {
    +payFail(Order order):Order
}
interface IOrderRefund {
    +refund(Order order):Order
}

Order ..|> IOrderCreate
Order ..|> IOrderCancle
Order ..|> IOrderPayPrepare
Order ..|> IOrderPaySuccess
Order ..|> IOrderDefray
Order ..|> IOrderPayFail
Order ..|> IOrderRefund

TicketChargeOrder --|> Order

TicketChargeOrderCreate ..|> IOrderCreate
TicketChargeOrderCancle ..|> IOrderCancle
TicketChargeOrderPayPrepare ..|> IOrderPayPrepare
TicketChargeOrderPaySuccess ..|> IOrderPaySuccess
TicketChargeOrderDefray ..|> IOrderDefray
TicketChargeOrderPayFail ..|> IOrderPayFail
TicketChargeOrderRefund ..|> IOrderRefund

TicketChargeOrder o.. TicketChargeOrderCreate
TicketChargeOrder o.. TicketChargeOrderCancle
TicketChargeOrder o.. TicketChargeOrderPayPrepare
TicketChargeOrder o.. TicketChargeOrderPaySuccess
TicketChargeOrder o.. TicketChargeOrderDefray
TicketChargeOrder o.. TicketChargeOrderPayFail
TicketChargeOrder o.. TicketChargeOrderRefund

class Order {
}

class TicketChargeOrder {
    -orderCreateExecutor:IOrderCreate
    -orderCancleExecutor:IOrderCancle
    -orderPayPrepareExecutor:IOrderPayPrepare
    -orderPaySuccessExecutor:IOrderPaySuccess
    -orderOrderDefrayExecutor:IOrderDefray
    -orderOrderPayFailExecutor:IOrderPayFail
    -orderOrderRefundExecutor:IOrderRefund
}

@enduml