package wr1ttenyu.f1nal.study.designpattern.pattern23.mediator;

/**
 * 中介者模式基本介绍
 * 1. 中介者模式（Mediator Pattern), 用一个中介对象来封装一系列的对象交互。
 *      中介者使各个对象不需要显示地相互引用，从而使其耦合松散，而且可以独立地改变他们之间的交互。
 * 2. 中介者模式属于行为模式，使代码易于维护
 * 3. 比如 MVC 模式，C(Controller 控制器）是 作为 M(Model 模型）和 V(view 视图）之间的中介者，
 *      在前后端交互时起到了中间人的作用
 *
 * 中介者模式的注意事项和细节
 * 1. 多个类相互耦合，会形成网状结构，使用中介者模式将网状结构分离为星型结构，进行解耦
 * 2. 减少类间依赖，降低了耦合，符合迪米特原则
 * 3. 中介者承担了较多的责任，一旦中介者出现了问题，整个系统就会受到影响
 * 4. 如果设计不当，中介者对象本身变得过于复杂，这点在实际使用时，要特别注意
 *
 * 中介者模式和门面模式的区别
 * 1. 门面模式包含了对一系列接口的分层或者分组逻辑在里面
 * 2. 中介者模式需要知道更多同事类的细节，和同事类之间的逻辑调用关系，而门面模式对其他类方法的调用相对简单
 */
public class Summary {
}
