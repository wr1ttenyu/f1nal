package wr1ttenyu.f1nal.study.designpattern.pattern23.interpreter;

/**
 * 解释器模式基本介绍
 * 1. 在编译原理中，一个算术表达式通过词法分析器形成词法单元，而后这些词法单元
 *      再通过语法分析器构建语法分析树，最终形成一颗抽象的语法分析树。这里的词法分析器和语法分析器都可以看做是解释器
 * 2. 解释器模式（Interpreter Pattern）：是指给定一个语言（表达式），定义它的文法的一种表示，并定义一个解释器，
 *      使用该解释器来解释语言中的句子（表达式）
 * 3. 应用场景：
 *      -- 应用可以将一个需要解释执行的语言中句子表示为一个抽象语法树
 *      -- 一些重复出现的问题可以用一种简单的语言表达式
 *      -- 一个简单语法需要解释的场景
 *      -- 比如编译器、运算表达式计算、正则表达式、机器人等
 */
public class Summary {
}
