// TODO 如果利用 scheduleService 里面的queue 可以按照时间排序 那么我们就能用在定时回调http工具类里面

// TODO https://www.codercto.com/a/43669.html plant uml 学习网址

// SOLVE mysql for update 能不能锁多行数据
    可以锁多行 但是要明确一点 锁如果不是建立在有效索引之上 会造成锁表

// TODO CONTINUE 画一画 jvm 内存模型图 https://blog.csdn.net/bntx2jsqfehy7/article/details/83508006
// 堆空间的细化 以及 各部分的作用

// TODO jdk 源码阅读路径 https://blog.csdn.net/weixin_40806611/article/details/82217675

------------------------------ start ------------------------------
// SOLVE REDIS 压测挂了 内存溢出 正好学习下
启动命令： java -Xms20m -Xmx20m -Dspring.profiles.active=nopool -XX:+PrintGCTimeStamps -XX:+PrintGCDetails -Xloggc:logs/gc.log -jar springboot-demo-0.0.1-SNAPSHOT.jar &
1. 首先启动时指定，jvm空间大小只有20m，这导致连接过多时堆内存溢出，报错如下：
    java.lang.OutOfMemoryError: Java heap space
    2020-01-13 17:58:29.703 ERROR 14193 --- [http-nio-8082-exec-139] o.a.coyote.http11.Http11NioProtocol      : Failed to complete processing of a request

2. 如果不是因为启动时指定的内存太小，而是程序操作不当导致的内存溢出如何调查原因？
    如果及时使用 jmap -histo pid 查看内存中不同类的实例数量和大小，根据前几名占用情况，应该可以大致分析出是哪个对象造成的
    如果判断不出 也可以使用 jmap -dump:format=b,file=outOfMemory.dump pid 来生成dump文件 再使用工具 VisualVM 来分析 dump 文件
    还可以打开gc日志，来分析gc的情况
------------------------------ end ------------------------------

// TODO 如何保障消息中间件 100% 消息投递成功？如何保证消息幂等性？ https://mp.weixin.qq.com/s?__biz=MzUxOTc4NjEyMw==&mid=2247485597&idx=1&sn=531529e6db421bc30bb3755d3480e1e2&chksm=f9f51379ce829a6ffb672e3895cd65257f1d353714d1589e216ac2f384996646b08488f57092&mpshare=1&scene=1&srcid=&sharer_sharetime=1578407400870&sharer_shareid=979ae5c1cbc6a728f87050a8fbfbabaf&key=575e7d6279b6dee49377f434bfe8ab179f6f365f1e2c676c8ce3db8c47638e14814459b06f36040d584051f1ac3273bc55f74c8e403bfb1d752ac84f2c960a683b847df66c0ba25d4981c8a19293d005&ascene=1&uin=Mjc5MDg4OTE4MA%3D%3D&devicetype=Windows+10&version=62070158&lang=zh_CN&exportkey=AT5vAt3q4AKVdHZ7KQQ87lU%3D&pass_ticket=DDhTuFQpIHjaqohCmgG020ELJO0MIMi4NJTweHVcgGicP2DVJhUQHh%2Bqzg8F8bRl

// TODO 做开发3年，阿里Java二面问Spring问得哑口无言？ https://mp.weixin.qq.com/s/JkdU5dWnyOpNCUERZk1cTA

// TODO 19年BAT常问面试题汇总：Redis+Dubbo+Spring Boot+JVM+Spring Cloud  https://mp.weixin.qq.com/s/7UlQ0gp6PDWiFuyevxjW_A

// TODO 学MySQL，这篇万字总结，真的够用了 https://mp.weixin.qq.com/s/0-wgz5EEFHPO4ncbo9rLBQ
1.事务的隔离级别
    1.1 事务间互相影响造成的问题：脏读 不可重复读 幻读
    1.2 具体隔离级别：读未提交 读已提交  可重复读 串行化 （读已提交 是常用的隔离级别）
    1.3 mysql 是默认隔离级别为 ：可重复读
    1.4 可重复读 解析：是在一个事务中，对相同的数据做第二次查询时，保证前后两次的值相同，其他事物可以对数据进行更新，
            也就是不能看到其他事务对已有记录的更新，而不是加行锁阻止其他事务更新数据，InnoDB 的底层实现是
            在RR隔离级别下为事务设置了一个“一致性读视图（即快照）”，之后读取数据，就是根据这个快照来获取，这样，
            就不能看到他晚于本事务的事务对已有记录的更新（更新生成新版本，必然不在旧的快照所限定的范围内）。
2.事务的传播属性
    org.springframework.transaction.annotation.Propagation

// SOLVE spring mvc 九大组件
    1. HandlerMapping 是用来查找Handler的。在SpringMVC中会有很多请求，每个请求都需要一个Handler处理，
            具体接收到一个请求之后使用哪个Handler进行处理呢？这就是HandlerMapping需要做的事。
    2. HandlerAdapter 从名字上看，它就是一个适配器。因为SpringMVC中的Handler可以是任意的形式，只要能处理请求就ok，但是Servlet需要的处理方法的结构却是固定的，都是以
            request和response为参数的方法。如何让固定的Servlet处理方法调用灵活的Handler来进行处理呢？这就是HandlerAdapter要做的事情。
    3. HandlerExceptionResolver 其它组件都是用来干活的。在干活的过程中难免会出现问题，出问题后怎么办呢？这就需要有一个专门的角色对异常情况进行处理，在SpringMVC
            中就是HandlerExceptionResolver。具体来说，此组件的作用是根据异常设置ModelAndView，之后再交给render方法进行渲染。
    4. ViewResolver ViewResolver用来将String类型的视图名和Locale解析为View类型的视图。View是用来渲染页面的，也就是将程序返回的参数填入模板里，生成html（也可能是其它类型）文件。这
            里就有两个关键问题：使用哪个模板？用什么技术（规则）填入参数？这其实是ViewResolver主要要做的工作，ViewResolver需要找到渲染所用的模板和所用的技术（也就是视图的类型）进
            行渲染，具体的渲染过程则交由不同的视图自己完成。
    5. RequestToViewNameTranslator ViewName是根据ViewName查找View，但有的Handler处理完后并没有设置View也没有设置ViewName，这时就需要从request获取ViewName了，如何从request中获取
            ViewName就是RequestToViewNameTranslator要做的事情了。RequestToViewNameTranslator在Spring MVC容器里只可以配置一个，
            所以所有request到ViewName的转换规则都要在一个Translator里面全部实现。
    6. LocaleResolver 解析视图需要两个参数：一是视图名，另一个是Locale。视图名是处理器返回的，Locale是从哪里来的？这就是LocaleResolver要做的事情。LocaleResolver用于从request解析出
            Locale，Locale就是zh-cn之类，表示一个区域，有了这个就可以对不同区域的用户显示不同的结果。SpringMVC主要有两个地方用到了Locale：一是ViewResolver视图解析的时候；二是用到
            国际化资源或者主题的时候。
    7. ThemeResolver 用于解析主题。SpringMVC中一个主题对应一个properties文件，里面存放着跟当前主题相关的所有资源、如图片、css样式等。SpringMVC的主题也支持国际化，
            同一个主题不同区域也可以显示不同的风格。SpringMVC中跟主题相关的类有 ThemeResolver、ThemeSource和Theme。主题是通过一系列资源来具体体现的，要得到一个主题的资源
            ，首先要得到资源的名称，这是ThemeResolver的工作。然后通过主题名称找到对应的主题（可以理解为一个配置）文件，这是ThemeSource的工作。最后从主题中获取资源就可以了。
    8. MultipartResolver 用于处理上传请求。处理方法是将普通的request包装成MultipartHttpServletRequest，后者可以直接调用getFile方法获取File，如果上传多个文件，还可
            以调用getFileMap得到FileName->File结构的Map。此组件中一共有三个方法，作用分别是判断是不是上传请求，将request包装成MultipartHttpServletRequest、处理完
            后清理上传过程中产生的临时资源。
    9. FlashMapManager 用来管理FlashMap的，FlashMap主要用在redirect中传递参数。

// TODO 阿里云 Redis 开发规范深入解读，别只会 set、get！ https://mp.weixin.qq.com/s/jy5gGFmbvdVQrIAMHBfGog

// TODO https://mp.weixin.qq.com/s/RYMx4GE-oGXH8zDDDauB9g 做一个 mybatis 代码的生成工程

// TODO redis 各种数据类型 操作api000

// TODO https://mp.weixin.qq.com/s/ZM4hZyJ6xoSQ6G2nBPiPgA springmvc 异常统一处理

// TODO ConcurrentHashMap
https://blog.csdn.net/u011392897/article/details/60479937
https://www.jianshu.com/p/5dbaa6707017
https://www.jianshu.com/p/e136ec79235c

// TODO spring boot start 原理 编写一个实用的 start

// TODO 数据源 druid

// TODO housemd Arthas

// TODO TreeSet 为什么线程不安全

// TODO 阿里云也有 IDEA 插件 Cloud Toolkit

// TODO 研究 alipay sdk

// TODO 项目骨架 错误日志分开打印

// SOLVE 加入把项目部署到tomcat中  那么 项目的线程是每个请求都是新的吗
// 通过实验证明 不是的 用的是线程池

// SOLVE 异常信息到底如何打印
// 对于logback来说 直接将异常对象传给日志打印方法 logback能打印出异常信息